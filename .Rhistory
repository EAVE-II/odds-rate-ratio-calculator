a_0 = n_0 * rate_0,
b_0 = (a_0 + a_1) * p_0,
b_1 = (a_0 + a_1) * p_1,
m_10 = a_1 * p_0,
m_01 = a_0 * p_1
)
# The number of units of person time spent in each category
# is given by the sum of the number of people in each category
# at the *beginning* of each time period
rate_1 = sum(df$n_1_event) / sum(df$n_1 * delta_t)
rate_0 = sum(df$n_0_event) / sum(df$n_0 * delta_t)
RR = rate_1 / rate_0
OR_matched = sum(df$m_10) / sum(df$m_01)
OR_unmatched = (sum(df$a_1) * sum(df$b_0)) / (sum(df$a_0) * sum(df$b_1))
p_0 = df[nrow(df), 'p_0']
return(c(
'Rate ratio' = RR,
'Odds ratio - matched' = OR_matched,
'Odds ratio - unmatched' = OR_unmatched,
'Proportion unexposed end' = p_0)
)
}
# Example values
times = c(0, 1, 2, 3)
p_exposed_start = 0.2
# HR = (0.8, 0.4, 0.2)
period_event_rate_exposed = c(0.01, 0.01, 0.01)
period_event_rate_unexposed = c(0.0125, 0.025, 0.05)
period_exposure_rate = c(0.1, 0.1, 0.1)
calc_OR_RR(
times = times,
period_event_rate_exposed = period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
calc_OR_RR = function(times, num_chunks = 1000,
period_event_rate_exposed, period_event_rate_unexposed,
p_exposed_start, period_exposure_rate){
# _1 refers to exposed, and _0 refers to unexposed
rate_1 = c()
rate_0 = c()
exposure_rate = c()
for (i in 1:(length(times)-1) ){
rate_1 = c(rate_1, rep(period_event_rate_exposed[i], num_chunks))
rate_0 = c(rate_0, rep(period_event_rate_unexposed[i], num_chunks))
exposure_rate = c(exposure_rate, rep(period_exposure_rate[i], num_chunks))
}
delta_t = 1/num_chunks
df = data.frame(
t_start = seq(times[1], times[length(times)] - delta_t, by = delta_t),
rate_1 = rate_1,
rate_0 = rate_0,
exposure_rate = exposure_rate,
n = NA,
n_0 = NA,
n_1 = NA,
n_0_event = NA,
n_1_event = NA,
newly_exposed = NA
)
df[ , 't_end'] = df[ , 't_start'] + delta_t
df[1, 'n'] = 1
df[1, 'p_1'] = p_exposed_start
df[1, 'n_0'] = (1 - p_exposed_start) * df[1, 'n']
df[1, 'n_1'] = p_exposed_start * df[1, 'n']
# Step-by-step simulation starts here
for (i in 1:nrow(df)){
df[i, 'n_0_event'] = df[i, 'rate_0'] * delta_t * df[i, 'n_0']
df[i, 'n_1_event'] = df[i, 'rate_1'] * delta_t * df[i, 'n_1']
df[i, 'newly_exposed'] = df[i, 'exposure_rate'] * delta_t * df[i, 'n_0']
if (i < (nrow(df))){
df[i+1, 'n_0'] = df[i, 'n_0'] - df[i, 'n_0_event'] - df[i, 'newly_exposed']
df[i+1, 'n_1'] = df[i, 'n_1'] - df[i, 'n_1_event'] + df[i, 'newly_exposed']
}
}
df = df %>%
mutate(
n = n_0 + n_1,
p_0 = n_0/n,
p_1 = 1 - p_0
)
# These are quantities that are used to estimate matched and unmatched
# odds ratios. Taken from OR_ij and OR_m on page 549 of the following
# paper:
#
# https://doi.org/10.1093/oxfordjournals.aje.a113439
#
# Note that I have not multiplied by delta_t, because this factor will
# cancel out in the OR_unmatched calculation below
df = df %>%
mutate(
a_1 = n_1 * rate_1,
a_0 = n_0 * rate_0,
b_0 = (a_0 + a_1) * p_0,
b_1 = (a_0 + a_1) * p_1,
m_10 = a_1 * p_0,
m_01 = a_0 * p_1
)
# The number of units of person time spent in each category
# is given by the sum of the number of people in each category
# at the *beginning* of each time period
rate_1 = sum(df$n_1_event) / sum(df$n_1 * delta_t)
rate_0 = sum(df$n_0_event) / sum(df$n_0 * delta_t)
RR = rate_1 / rate_0
OR_matched = sum(df$m_10) / sum(df$m_01)
OR_unmatched = (sum(df$a_1) * sum(df$b_0)) / (sum(df$a_0) * sum(df$b_1))
p_0 = df[nrow(df), 'p_0']
return(c(
'Rate ratio' = RR,
'Odds ratio - matched' = OR_matched,
'Odds ratio - unmatched' = OR_unmatched,
'Proportion unexposed end' = p_0)
)
}
calc_OR_RR(
times = times,
period_event_rate_exposed = period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
# HR = (0.4, 0.4, 0.4)
period_event_rate_exposed = c(0.01, 0.01, 0.01)
period_event_rate_unexposed = c(0.025, 0.025, 0.025)
period_exposure_rate = c(0.1, 0.5, 0.1)
calc_OR_RR(
times = times,
period_event_rate_exposed =period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
library(tidyverse)
calc_OR_RR = function(times, num_chunks = 1000,
period_event_rate_exposed, period_event_rate_unexposed,
p_exposed_start, period_exposure_rate){
# _1 refers to exposed, and _0 refers to unexposed
rate_1 = c()
rate_0 = c()
exposure_rate = c()
for (i in 1:(length(times)-1) ){
rate_1 = c(rate_1, rep(period_event_rate_exposed[i], num_chunks))
rate_0 = c(rate_0, rep(period_event_rate_unexposed[i], num_chunks))
exposure_rate = c(exposure_rate, rep(period_exposure_rate[i], num_chunks))
}
delta_t = 1/num_chunks
df = data.frame(
t_start = seq(times[1], times[length(times)] - delta_t, by = delta_t),
rate_1 = rate_1,
rate_0 = rate_0,
exposure_rate = exposure_rate,
n = NA,
n_0 = NA,
n_1 = NA,
n_0_event = NA,
n_1_event = NA,
newly_exposed = NA
)
df[ , 't_end'] = df[ , 't_start'] + delta_t
df[1, 'n'] = 1
df[1, 'p_1'] = p_exposed_start
df[1, 'n_0'] = (1 - p_exposed_start) * df[1, 'n']
df[1, 'n_1'] = p_exposed_start * df[1, 'n']
# Step-by-step simulation starts here
for (i in 1:nrow(df)){
df[i, 'n_0_event'] = df[i, 'rate_0'] * delta_t * df[i, 'n_0']
df[i, 'n_1_event'] = df[i, 'rate_1'] * delta_t * df[i, 'n_1']
df[i, 'newly_exposed'] = df[i, 'exposure_rate'] * delta_t * df[i, 'n_0']
if (i < (nrow(df))){
df[i+1, 'n_0'] = df[i, 'n_0'] - df[i, 'n_0_event'] - df[i, 'newly_exposed']
df[i+1, 'n_1'] = df[i, 'n_1'] - df[i, 'n_1_event'] + df[i, 'newly_exposed']
}
}
df = df %>%
mutate(
n = n_0 + n_1,
p_0 = n_0/n,
p_1 = 1 - p_0
)
# These are quantities that are used to estimate matched and unmatched
# odds ratios. Taken from OR_ij and OR_m on page 549 of the following
# paper:
#
# https://doi.org/10.1093/oxfordjournals.aje.a113439
#
# Note that I have not multiplied by delta_t, because this factor will
# cancel out in the OR_unmatched calculation below
df = df %>%
mutate(
a_1 = n_1 * rate_1,
a_0 = n_0 * rate_0,
b_0 = (a_0 + a_1) * p_0,
b_1 = (a_0 + a_1) * p_1,
m_10 = a_1 * p_0,
m_01 = a_0 * p_1
)
# The number of units of person time spent in each category
# is given by the sum of the number of people in each category
# at the *beginning* of each time period
rate_1 = sum(df$n_1_event) / sum(df$n_1 * delta_t)
rate_0 = sum(df$n_0_event) / sum(df$n_0 * delta_t)
RR = rate_1 / rate_0
OR_matched = sum(df$m_10) / sum(df$m_01)
OR_unmatched = (sum(df$a_1) * sum(df$b_0)) / (sum(df$a_0) * sum(df$b_1))
p_0 = df[nrow(df), 'p_0']
return(c(
'Rate ratio' = RR,
'Odds ratio - matched' = OR_matched,
'Odds ratio - unmatched' = OR_unmatched,
'Proportion unexposed end' = p_0)
)
}
# Example values
times = c(0, 1, 2, 3)
p_exposed_start = 0.2
# HR = (0.8, 0.4, 0.2)
period_event_rate_exposed = c(0.01, 0.01, 0.01)
period_event_rate_unexposed = c(0.0125, 0.025, 0.05)
period_exposure_rate = c(0.1, 0.1, 0.1)
# _1 refers to exposed, and _0 refers to unexposed
rate_1 = c()
rate_0 = c()
exposure_rate = c()
for (i in 1:(length(times)-1) ){
rate_1 = c(rate_1, rep(period_event_rate_exposed[i], num_chunks))
rate_0 = c(rate_0, rep(period_event_rate_unexposed[i], num_chunks))
exposure_rate = c(exposure_rate, rep(period_exposure_rate[i], num_chunks))
}
delta_t = 1/num_chunks
num_chunks = 1000
# _1 refers to exposed, and _0 refers to unexposed
rate_1 = c()
rate_0 = c()
exposure_rate = c()
for (i in 1:(length(times)-1) ){
rate_1 = c(rate_1, rep(period_event_rate_exposed[i], num_chunks))
rate_0 = c(rate_0, rep(period_event_rate_unexposed[i], num_chunks))
exposure_rate = c(exposure_rate, rep(period_exposure_rate[i], num_chunks))
}
delta_t = 1/num_chunks
df = data.frame(
t_start = seq(times[1], times[length(times)] - delta_t, by = delta_t),
rate_1 = rate_1,
rate_0 = rate_0,
exposure_rate = exposure_rate,
n = NA,
n_0 = NA,
n_1 = NA,
n_0_event = NA,
n_1_event = NA,
newly_exposed = NA
)
df[ , 't_end'] = df[ , 't_start'] + delta_t
df[1, 'n'] = 1
df[1, 'p_1'] = p_exposed_start
df[1, 'n_0'] = (1 - p_exposed_start) * df[1, 'n']
df[1, 'n_1'] = p_exposed_start * df[1, 'n']
# Step-by-step simulation starts here
for (i in 1:nrow(df)){
df[i, 'n_0_event'] = df[i, 'rate_0'] * delta_t * df[i, 'n_0']
df[i, 'n_1_event'] = df[i, 'rate_1'] * delta_t * df[i, 'n_1']
df[i, 'newly_exposed'] = df[i, 'exposure_rate'] * delta_t * df[i, 'n_0']
if (i < (nrow(df))){
df[i+1, 'n_0'] = df[i, 'n_0'] - df[i, 'n_0_event'] - df[i, 'newly_exposed']
df[i+1, 'n_1'] = df[i, 'n_1'] - df[i, 'n_1_event'] + df[i, 'newly_exposed']
}
}
df = df %>%
mutate(
n = n_0 + n_1,
p_0 = n_0/n,
p_1 = 1 - p_0
)
# These are quantities that are used to estimate matched and unmatched
# odds ratios. Taken from OR_ij and OR_m on page 549 of the following
# paper:
#
# https://doi.org/10.1093/oxfordjournals.aje.a113439
#
# Note that I have not multiplied by delta_t, because this factor will
# cancel out in the OR_unmatched calculation below
df = df %>%
mutate(
a_1 = n_1 * rate_1,
a_0 = n_0 * rate_0,
b_0 = (a_0 + a_1) * p_0,
b_1 = (a_0 + a_1) * p_1,
m_10 = a_1 * p_0,
m_01 = a_0 * p_1
)
# The number of units of person time spent in each category
# is given by the sum of the number of people in each category
# at the *beginning* of each time period
rate_1 = sum(df$n_1_event) / sum(df$n_1 * delta_t)
rate_0 = sum(df$n_0_event) / sum(df$n_0 * delta_t)
RR = rate_1 / rate_0
OR_matched = sum(df$m_10) / sum(df$m_01)
OR_unmatched = (sum(df$a_1) * sum(df$b_0)) / (sum(df$a_0) * sum(df$b_1))
p_0 = df[nrow(df), 'p_0']
library(tidyverse)
calc_OR_RR = function(times, num_chunks = 1000,
period_event_rate_exposed, period_event_rate_unexposed,
p_exposed_start, period_exposure_rate){
# _1 refers to exposed, and _0 refers to unexposed
rate_1 = c()
rate_0 = c()
exposure_rate = c()
for (i in 1:(length(times)-1) ){
rate_1 = c(rate_1, rep(period_event_rate_exposed[i], num_chunks))
rate_0 = c(rate_0, rep(period_event_rate_unexposed[i], num_chunks))
exposure_rate = c(exposure_rate, rep(period_exposure_rate[i], num_chunks))
}
delta_t = 1/num_chunks
df = data.frame(
t_start = seq(times[1], times[length(times)] - delta_t, by = delta_t),
rate_1 = rate_1,
rate_0 = rate_0,
exposure_rate = exposure_rate,
n = NA,
n_0 = NA,
n_1 = NA,
n_0_event = NA,
n_1_event = NA,
newly_exposed = NA
)
df[ , 't_end'] = df[ , 't_start'] + delta_t
df[1, 'n'] = 1
df[1, 'p_1'] = p_exposed_start
df[1, 'n_0'] = (1 - p_exposed_start) * df[1, 'n']
df[1, 'n_1'] = p_exposed_start * df[1, 'n']
# Step-by-step simulation starts here
for (i in 1:nrow(df)){
df[i, 'n_0_event'] = df[i, 'rate_0'] * delta_t * df[i, 'n_0']
df[i, 'n_1_event'] = df[i, 'rate_1'] * delta_t * df[i, 'n_1']
df[i, 'newly_exposed'] = df[i, 'exposure_rate'] * delta_t * df[i, 'n_0']
if (i < (nrow(df))){
df[i+1, 'n_0'] = df[i, 'n_0'] - df[i, 'n_0_event'] - df[i, 'newly_exposed']
df[i+1, 'n_1'] = df[i, 'n_1'] - df[i, 'n_1_event'] + df[i, 'newly_exposed']
}
}
df = df %>%
mutate(
n = n_0 + n_1,
p_0 = n_0/n,
p_1 = 1 - p_0
)
# These are quantities that are used to estimate matched and unmatched
# odds ratios. Taken from OR_ij and OR_m on page 549 of the following
# paper:
#
# https://doi.org/10.1093/oxfordjournals.aje.a113439
#
# Note that I have not multiplied by delta_t, because this factor will
# cancel out in the OR_unmatched calculation below
df = df %>%
mutate(
a_1 = n_1 * rate_1,
a_0 = n_0 * rate_0,
b_0 = (a_0 + a_1) * p_0,
b_1 = (a_0 + a_1) * p_1,
m_10 = a_1 * p_0,
m_01 = a_0 * p_1
)
# The number of units of person time spent in each category
# is given by the sum of the number of people in each category
# at the *beginning* of each time period
rate_1 = sum(df$n_1_event) / sum(df$n_1 * delta_t)
rate_0 = sum(df$n_0_event) / sum(df$n_0 * delta_t)
RR = rate_1 / rate_0
OR_matched = sum(df$m_10) / sum(df$m_01)
OR_unmatched = (sum(df$a_1) * sum(df$b_0)) / (sum(df$a_0) * sum(df$b_1))
p_0 = df[nrow(df), 'p_0']
OR =
return(c(
'Rate ratio' = RR,
'Odds ratio - matched' = OR_matched,
'Odds ratio - unmatched' = OR_unmatched,
'Proportion unexposed end' = p_0)
)
}
# Example values
times = c(0, 1, 2, 3)
p_exposed_start = 0.2
# HR = (0.8, 0.4, 0.2)
period_event_rate_exposed = c(0.01, 0.01, 0.01)
period_event_rate_unexposed = c(0.0125, 0.025, 0.05)
period_exposure_rate = c(0.1, 0.1, 0.1)
calc_OR_RR(
times = times,
period_event_rate_exposed = period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
period_exposure_rate = c(0.1, 0.5, 0.1)
calc_OR_RR(
times = times,
period_event_rate_exposed =period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
library(tidyverse)
calc_OR_RR = function(times, num_chunks = 1000,
period_event_rate_exposed, period_event_rate_unexposed,
p_exposed_start, period_exposure_rate){
# _1 refers to exposed, and _0 refers to unexposed
rate_1 = c()
rate_0 = c()
exposure_rate = c()
for (i in 1:(length(times)-1) ){
rate_1 = c(rate_1, rep(period_event_rate_exposed[i], num_chunks))
rate_0 = c(rate_0, rep(period_event_rate_unexposed[i], num_chunks))
exposure_rate = c(exposure_rate, rep(period_exposure_rate[i], num_chunks))
}
delta_t = 1/num_chunks
df = data.frame(
t_start = seq(times[1], times[length(times)] - delta_t, by = delta_t),
rate_1 = rate_1,
rate_0 = rate_0,
exposure_rate = exposure_rate,
n = NA,
n_0 = NA,
n_1 = NA,
n_0_event = NA,
n_1_event = NA,
newly_exposed = NA
)
df[ , 't_end'] = df[ , 't_start'] + delta_t
df[1, 'n'] = 1
df[1, 'p_1'] = p_exposed_start
df[1, 'n_0'] = (1 - p_exposed_start) * df[1, 'n']
df[1, 'n_1'] = p_exposed_start * df[1, 'n']
# Step-by-step simulation starts here
for (i in 1:nrow(df)){
df[i, 'n_0_event'] = df[i, 'rate_0'] * delta_t * df[i, 'n_0']
df[i, 'n_1_event'] = df[i, 'rate_1'] * delta_t * df[i, 'n_1']
df[i, 'newly_exposed'] = df[i, 'exposure_rate'] * delta_t * df[i, 'n_0']
if (i < (nrow(df))){
df[i+1, 'n_0'] = df[i, 'n_0'] - df[i, 'n_0_event'] - df[i, 'newly_exposed']
df[i+1, 'n_1'] = df[i, 'n_1'] - df[i, 'n_1_event'] + df[i, 'newly_exposed']
}
}
df = df %>%
mutate(
n = n_0 + n_1,
p_0 = n_0/n,
p_1 = 1 - p_0
)
# These are quantities that are used to estimate matched and unmatched
# odds ratios. Taken from OR_ij and OR_m on page 549 of the following
# paper:
#
# https://doi.org/10.1093/oxfordjournals.aje.a113439
#
# Note that I have not multiplied by delta_t, because this factor will
# cancel out in the OR_unmatched calculation below
df = df %>%
mutate(
a_1 = n_1 * rate_1,
a_0 = n_0 * rate_0,
b_0 = (a_0 + a_1) * p_0,
b_1 = (a_0 + a_1) * p_1,
m_10 = a_1 * p_0,
m_01 = a_0 * p_1
)
# The number of units of person time spent in each category
# is given by the sum of the number of people in each category
# at the *beginning* of each time period
rate_1 = sum(df$n_1_event) / sum(df$n_1 * delta_t)
rate_0 = sum(df$n_0_event) / sum(df$n_0 * delta_t)
RR = rate_1 / rate_0
OR_matched = sum(df$m_10) / sum(df$m_01)
OR_unmatched = (sum(df$a_1) * sum(df$b_0)) / (sum(df$a_0) * sum(df$b_1))
p_0 = df[nrow(df), 'p_0']
return(c(
'Rate ratio' = RR,
'Odds ratio - matched' = OR_matched,
'Odds ratio - unmatched' = OR_unmatched,
'Proportion unexposed end' = p_0)
)
}
# Example values
times = c(0, 1, 2, 3)
p_exposed_start = 0.2
# Example values
times = c(0, 1, 2, 3)
p_exposed_start = 0.2
# HR = (0.8, 0.4, 0.2)
period_event_rate_exposed = c(0.01, 0.01, 0.01)
period_event_rate_unexposed = c(0.0125, 0.025, 0.05)
period_exposure_rate = c(0.1, 0.1, 0.1)
# HR = (0.4, 0.4, 0.4)
period_event_rate_exposed = c(0.01, 0.01, 0.01)
period_event_rate_unexposed = c(0.025, 0.025, 0.025)
period_exposure_rate = c(0.1, 0.5, 0.1)
calc_OR_RR(
times = times,
period_event_rate_exposed =period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
# Event rates switched for exposed/unexposed
# HR = (1.25, 2.5, 5)
period_event_rate_exposed = c(0.0125, 0.025, 0.05)
period_event_rate_unexposed = c(0.01, 0.01, 0.01)
# HR = (2.5, 2.5, 2.5)
period_event_rate_exposed = c(0.025, 0.025, 0.025)
period_event_rate_unexposed = c(0.01, 0.01, 0.01)
period_exposure_rate = c(0.1, 0.5, 0.1)
calc_OR_RR(
times = times,
period_event_rate_exposed =period_event_rate_exposed,
period_event_rate_unexposed = period_event_rate_unexposed,
p_exposed_start = p_exposed_start,
period_exposure_rate = period_exposure_rate)
